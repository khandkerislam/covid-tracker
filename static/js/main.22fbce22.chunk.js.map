{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Chart/Chart.jsx","App.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdated","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","lastUpdate","console","log","fetchdailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","names","countries","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","index","key","Chart","setdailyData","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","App","state","fetchedData","setState","this","image","src","coronaImage","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22fbce22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid, StylesProvider} from '@material-ui/core';\nimport CountUp from  'react-countup'\nimport cx from 'classnames'\n\nimport styles from './Cards.module.css';\n\n\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdated}}) => {\n    if(!confirmed) {\n        return 'Loading...'\n    }\n    return(\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0}end={confirmed.value}duration={2.5}separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdated).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0}end={recovered.value}duration={1.5}separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdated).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0}end={deaths.value}duration={2.5}separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdated).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) => {\n    let changeableUrl = url;\n    \n    if(country){\n        changeableUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const {data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\n        \n        return {confirmed, recovered, deaths, lastUpdate};\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchdailyData = async ()=> {\n    try {\n        const { data } = await axios.get(`${url}/daily`)\n        const modifiedData = data.map((dailyData)=>({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n    return modifiedData;\n    }catch (error) {\n\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data } = await axios.get(`${url}/countries`);\n        const names = data.countries.map((country)=>country.name);\n        console.log(names);\n        return names;\n    } catch (error) {\n        return error;\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css'\n\nimport { fetchCountries } from '../../api';\n\nconst Countries = ({handleCountryChange}) => {\n\n    const [countries, setCountries] = useState([]);\n    \n    useEffect(()=> {\n        const fetchAPI = async () => {\n            setCountries(await fetchCountries());\n        }\n        fetchAPI();\n    },[])\n\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {countries.map((country, index)=>{return <option key={index} value={country}>{country}</option>})}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default Countries;","import React, { useState, useEffect } from 'react';\nimport { fetchdailyData } from '../../api';\n\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ( {data: { confirmed, deaths, recovered }, country}) => {\n    const [dailyData, setdailyData] = useState([])\n\n    useEffect(()=>{\n      const fetchApi = async () => {\n        setdailyData(await fetchdailyData());\n      }\n      fetchApi();\n    },[]);\n    const lineChart = (\n        dailyData.length\n          ? (<Line\n          data={\n              {\n                labels: dailyData.map(({date})=> date),\n                datasets: \n                [\n                    {\n                    data: dailyData.map(({confirmed}) => confirmed),\n                    label: 'Infected',\n                    borderColor: '#3333ff',\n                    fill: true,\n\n                    },\n                    {\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'red',\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                    fill: true,\n                    \n                    }\n                ],\n              }\n            }\n          />) : null\n    )\n\n    const barChart = (\n      confirmed\n        ? (\n        <Bar \n          data={{\n            labels: ['Infected', 'Recovered','Deaths'],\n            datasets: [{\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)','rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value]\n            }]\n          }}\n          options={{\n            legend: {display: false},\n            title: {display: true, text: `Current state in ${country}`}\n          }}\n        />)\n        : null\n        \n    );\n\n    return(\n        <div className={styles.container}>\n            {country ? barChart : lineChart }\n        </div>\n    )\n}\n\nexport default Chart;","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component{\n\n    state = {\n        data: {},\n    }\n\n    async componentDidMount (){\n        const fetchedData = await fetchData();\n        this.setState({data: fetchedData});\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({data: fetchedData, country: country});\n    }\n\n    render() {\n        const {data, country} = this.state;\n\n        return(\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt='COVID-19'/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"img\":\"App_img__2TF4E\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}